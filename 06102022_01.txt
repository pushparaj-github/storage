import React, { useState, useRef, useEffect, useMemo, useCallback} from 'react';
import { render } from 'react-dom';
import { AgGridColumn, AgGridReact } from 'ag-grid-react'; // the AG Grid React Component

import 'ag-grid-community/styles/ag-grid.css'; // Core grid CSS, always needed
import 'ag-grid-community/styles/ag-theme-alpine.css'; // Optional theme CSS

const App = () => {

 const gridRef = useRef(); // Optional - for accessing Grid's API
 const [rowData, setRowData] = useState(); // Set rowData to Array of Objects, one Object per Row

 // Each Column Definition results in one Column.
 const [columnDefs, setColumnDefs] = useState([
  {
    headerName: 'ID',
    field: 'id',
    filter:true
  },
  {
    headerName: 'Title',  
    field: 'title',    
    filter:true
  },
  {
    headerName: 'Description',  
    field: 'description',
    filter:true
  },
  {
    headerName: 'Price',  
    field: 'price',
    filter:true
  },
  {
    headerName: 'Discount %',  
    field: 'discountPercentage',
    filter:true
  },
  {
    headerName: 'Rating',  
    field: 'rating',
    filter:true
  },
  {
    headerName: 'Stock',  
    field: 'stock',
    filter:true
  },
  {
    headerName: 'Brand',  
    field: 'brand',
    filter:true
  },
  {
    headerName: 'Category',  
    field: 'category',
    filter:true
  },
  {
    headerName: 'Thumbnail',  
    field: 'thumbnail',
    filter:true
  },
  {
    headerName: 'Images',  
    field: 'images',
    filter:true
  }  
 ]);

 // DefaultColDef sets props common to all Columns
 const defaultColDef = useMemo( ()=> ({
     sortable: true
   }));


 // Example of consuming Grid Event
 const cellClickedListener = useCallback( event => {
   console.log('cellClicked', event);
 }, []);

 const getData=()=>{
  fetch('data/productData.json'
  ,{
    headers : { 
      'Content-Type': 'application/json',
      'Accept': 'application/json'
     }
  }
  )
    .then(function(response){
      console.log(response)
      return response.json();
    })
    .then(function(myJson) {
      console.log(myJson);
      setRowData(myJson.products)
    });
}
useEffect(()=>{
  getData()
},[])

//  // Example load data from sever URL
//  useEffect(() => {
//    fetch('https://dummyjson.com/products')
//    .then(result => result.json())
//    .then(rowData => setRowData(rowData.products))
//  }, []);

 // Example using Grid's API
 const buttonListener = useCallback( e => {
   gridRef.current.api.deselectAll();
 }, []);

 return (
   <div>

     {/* Example using Grid's API */}
     <button onClick={buttonListener}>Push Me</button>

     {/* On div wrapping Grid a) specify theme CSS Class Class and b) sets Grid size */}
     <div className="ag-theme-alpine" style={{width: 1000, height: 500}}>

       <AgGridReact
           ref={gridRef} // Ref for accessing Grid's API

           rowData={rowData} // Row Data for Rows

           columnDefs={columnDefs} // Column Defs for Columns
           defaultColDef={defaultColDef} // Default Column Properties

           animateRows={true} // Optional - set to 'true' to have rows animate when sorted
           rowSelection='multiple' // Options - allows click selection of rows

           onCellClicked={cellClickedListener} // Optional - registering for Grid Event
           />
     </div>
   </div>
 );
};

export default App;